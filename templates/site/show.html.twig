
{% extends 'base.html.twig' %}

{% block title %}Hello SiteController!{% endblock %}

{% block body %}
<style>
.container-fluid{
    margin-top:50px;
    background-color:#e3e7ea;
    width:78vw;
}
#map{
    height:100%;
}
.details{
    height:390px;
}
.haut{
    padding-bottom:50px;
}
</style>
<div class="container-fluid" onload="initialize()">
    <div class="row haut">
        <div class="col-6"  >
            <h2>{{ article.name }}</h2>
            <img class="img-fluid img-thumbnail" src="{{ vich_uploader_asset(article, 'imageFile') }}" alt="">
        </div>
        <div class="col-6">
            <h2>horaires</h2>
            <p id="horaires"></p>
        </div>
    </div>
    <div class="row details">
        
        <div class="col-6">
            <h3>Description</h3>
            <p>{{article.description}}</p>
        </div>
        <div class="col-6">
            <h3>Localisation</h3>
            <!-- MAP ARTICLE -->
            <div id="map"></div>
            <span>{{article.adress}}</span>
        </div>
    </div>


</div>

<!-- MAP ARTICLE -->
<div id="map"></div>


<script>
    var geocoder;
    var map;
    function initialize() {
        var service;
        var infowindow;
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(-34.397, 150.644);
        var mapOptions = {
        zoom: 15,
        center: latlng,
        mapTypeControl: false
        }
        map = new google.maps.Map(document.getElementById('map'), mapOptions);

        var request = {
            query: "{{article.name|raw}}|{{article.adress}}",
            fields: ['name', 'opening_hours', 'geometry', 'place_id'],
        };
        var service = new google.maps.places.PlacesService(map);

        service.findPlaceFromQuery(request, function(results, status) {
            if (status === google.maps.places.PlacesServiceStatus.OK) {
            for (var i = 0; i < results.length; i++) {
                console.log('coucou');
            }
            
            }
            console.log(results[0]);
            console.log(results[0].place_id);
            var request = {
                placeId: results[0].place_id,
                fields: ['name', 'opening_hours', 'formatted_phone_number', 'geometry']
            };

            service = new google.maps.places.PlacesService(map);
            service.getDetails(request, callback);
            
            function callback(place, status) {
            if (status == google.maps.places.PlacesServiceStatus.OK) {
                console.log('ok');
                console.log(place);
                console.log(place.opening_hours.weekday_text);
                var horaires = place.opening_hours.weekday_text;
                for(var i=0; i < horaires.length; i++){
                    document.getElementById("horaires").innerHTML += "<p>"+horaires[i]+"</p></br>";
                }

            }
            }
        });
        
        codeAddress();
        function createMarker(place) {
        var marker = new google.maps.Marker({
          map: map,
          position: place.geometry.location
        });

        google.maps.event.addListener(marker, 'click', function() {
          infowindow.setContent(place.name);
          infowindow.open(map, this);
        });
        }

    }

    function codeAddress() {
        var address = "{{article.adress}}";
        geocoder.geocode( { 'address': address}, function(results, status) {
        if (status == 'OK') {
            map.setCenter(results[0].geometry.location);
            var marker = new google.maps.Marker({
                map: map,
                position: results[0].geometry.location
            });
        } else {
            alert('Geocode was not successful for the following reason: ' + status);
        }
        });
    }

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCmJr7LIm3dKeOjtFo7fAH1g5mffDQUL2I&libraries=places&callback=initialize"
    async defer></script>

{% endblock %}
